name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    # 1. Получение кода
    - uses: actions/checkout@v4

    # 2. Установка Python
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    # 3. Кэширование зависимостей
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          venv/
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}

    # 4. Установка зависимостей
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt

    # 5. Запуск тестов
    - name: Run tests with coverage
      run: |
        pytest --cov=src --cov-report=xml

    # 6. Проверка стиля кода
    - name: Lint with flake8
      run: flake8 src

    - name: Check formatting with Black
      run: black --check src tests

    # 7. Загрузка отчета о покрытии (опционально)
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()

  docker-build:
    needs: test  # Зависит от успешного завершения тестов
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/python-guide:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/python-guide:${{ github.sha }}